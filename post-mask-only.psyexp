<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'n_square': '32', 'probeFrames': '5', 'participant': '', 'session': '001', 'image_size': '256', 'premask_dur': '20', 'postmask_dur': '20', 'block': '1'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="html" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="packaged" valType="str" updates="None" name="JS libs"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="" valType="str" updates="None" name="OSF Project ID"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="True" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="use prefs" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="black" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="post-mask-only" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="response_routine">
      <RoutineSettingsComponent name="response_routine" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="response_routine" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="reponse_trigger_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trials.addData(&quot;discrim_resptime&quot;, globalClock.getTime() - startTime)&amp;#10;&amp;#10;resp_options = [['nV_V',['Nonliving_Things','Living_Things']],&amp;#10;                ['V_nV',['Living_Things','Nonliving_Things']]]&amp;#10;&amp;#10;idx = np.random.choice([0,1])&amp;#10;msg = '{}'.format(resp_options[idx][0])&amp;#10;&amp;#10;trials.addData(&quot;response_window&quot;, resp_options[idx][0])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="temp_correctAns = np.where(np.array(resp_options[idx][1]) == category)[0][0]+1&amp;#10;&amp;#10;trials.addData('correctAns',temp_correctAns)&amp;#10;&amp;#10;# objective accuracy&amp;#10;&amp;#10;if (response.keys == str(temp_correctAns)) or (response.keys == temp_correctAns):&amp;#10;   temp_corr = 1&amp;#10;else:&amp;#10;    temp_corr = 0&amp;#10;&amp;#10;trials.addData('response.corr' , temp_corr)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="reponse_trigger_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="response" plugin="None">
        <Param val="'1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correctAns" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="response" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="tell_response" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="tell_response" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg&amp;#10;&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="jitter_delay">
      <RoutineSettingsComponent name="jitter_delay" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="jitter_delay" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="pick_jitter_delay_duration" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="jit_count = 0&amp;#10;&amp;#10;jitter_dur_options = np.concatenate([[1.0]*16,&amp;#10;[1.5]*8,&amp;#10;[2.0]*4,&amp;#10;[2.5]*2,&amp;#10;[3.0]*2]) &amp;#10;&amp;#10;np.random.shuffle(jitter_dur_options)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="jit_count = 0;&amp;#10;jitter_dur_options = np.concatenate([([1.0] * 16), ([1.5] * 8), ([2.0] * 4), ([2.5] * 2), ([3.0] * 2)]);&amp;#10;np.random.shuffle(jitter_dur_options);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;jitter_delay_dur=jitter_dur_options[jit_count]#first is jit1_count 0&amp;#10;&amp;#10;trials.addData(&quot;jitter1&quot;, jitter_delay_dur)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="pick_jitter_delay_duration" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="delay_post_mask" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="delay_post_mask" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$jitter_delay_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="introduction">
      <RoutineSettingsComponent name="introduction" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="introduction" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="description_of_experiment" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="description_of_experiment" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="注意" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="global_fixation" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="global_fixation" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="visibility">
      <RoutineSettingsComponent name="visibility" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="visibility" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="visible" plugin="None">
        <Param val="'1','2','3'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="1" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="visible" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="tell_visible" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="tell_visible" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="?" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="trigger_visibility" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trials.addData(&quot;visible_resptime&quot;, globalClock.getTime() - startTime)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trigger_visibility" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="staircase" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="count += 1&amp;#10;trials.addData('probe_Frames',curr)&amp;#10;    &amp;#10;count += 1&amp;#10;if (visible.keys == str('1')) or (visible.keys == '1'):# invisible&amp;#10;        curr += np.random.choice([1,2,3],size=1)[0]&amp;#10;        if curr &lt; 1:  curr = 1&amp;#10;elif (visible.keys == str('2')) or (visible.keys == '2'):# partially aware&amp;#10;        curr -= 1&amp;#10;        if curr &lt; 1:  curr = 1 &amp;#10;elif (visible.keys == str('3')) or (visible.keys == '3'): # visible&amp;#10;        curr -= np.random.choice([2,3],size=1,p=[0.5,0.5])[0]&amp;#10;        if curr &lt; 1: curr = 1&amp;#10;    &amp;#10;#elif (visible.keys == str('4')) or (visible.keys == '4'): # fully visible&amp;#10;#        curr -= 3&amp;#10;#        if curr &lt; 1: curr = 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="staircase" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="show_message">
      <RoutineSettingsComponent name="show_message" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="show_message" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="print_" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;meanacc = trials.data['response.corr'].mean()&amp;#10;meanvis = trials.data['visible.corr'].mean()&amp;#10;#msg=&quot;{} / {}\n\nmean correct {:.2f} \npresenting frames = {}\nmean unconscious response = {:.3f}&quot; .format(&amp;#10;#count,n_total,meanacc,curr,meanvis)&amp;#10;&amp;#10;#msg = msg + '\nkey={},cor={}'.format(response.keys,str(temp_correctAns))&amp;#10;#msg WOULD BE TO DISPLAY IN A TXT OBJECT - THAT HAS BEEN DELETED" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(&quot;{}/{},mean unconscious = {:.2f}, frame = {}, p(correct) = {:.2f}&quot;.format(&amp;#10;    trials.thisN,trials.nTotal,&amp;#10;    meanvis,curr,meanacc))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="print_" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="premask">
      <RoutineSettingsComponent name="premask" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="premask" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="fixation" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="blank" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="blank" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$fixation.status==FINISHED" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="premask_1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="nearest" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="premask_1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="$np.random.uniform(0,1,2).round(1)" valType="code" updates="set every repeat" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="None" valType="code" updates="constant" name="sf"/>
        <Param val="$(image_size, image_size)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$blank.status == FINISHED" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$premask_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$np.random.rand(n_square,n_square) * 2 -1" valType="str" updates="set every frame" name="tex"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </GratingComponent>
    </Routine>
    <Routine name="probe_routine">
      <RoutineSettingsComponent name="probe_routine" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="probe_routine" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trials.addData(&quot;image_onset_time&quot;, globalClock.getTime() - startTime)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="probe" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image_name" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="probe" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$(image_size, image_size)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$curr" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="End_experiment">
      <RoutineSettingsComponent name="End_experiment" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="End_experiment" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="The_End" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="The_End" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="print(globalClock.getTime() - startTime)&amp;#10;print(&quot;mean unconscious = {:.2f}, frame = {}, p(correct) = {:.2f}&quot;.format(&amp;#10;    meanvis,curr,meanacc))" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="setupTRIGetc">
      <RoutineSettingsComponent name="setupTRIGetc" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="setupTRIGetc" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="setup_vbles_trigger" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="curr=int(expInfo['probeFrames'])&amp;#10;count=0&amp;#10;&amp;#10;n_total = 32&amp;#10;premask_dur = float(expInfo['premask_dur'])&amp;#10;postmask_dur = float(expInfo['postmask_dur'])&amp;#10;session = int(expInfo['session'])&amp;#10;block = int(expInfo['block'])&amp;#10;n_square = int(expInfo['n_square'])&amp;#10;image_size = int(expInfo['image_size'])&amp;#10;&amp;#10;import time&amp;#10;from psychopy import parallel &amp;#10;parallel.setPortAddress(888)&amp;#10;wait_msg = &quot;Waiting for Scanner...&quot;&amp;#10;msg = visual.TextStim(win, color = 'DarkGray', text = wait_msg)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="msg.draw()&amp;#10;win.flip()&amp;#10;&amp;#10;while True:&amp;#10;    if (parallel.readPin(10) == 1) or (event.getKeys() == ['q']):&amp;#10;        break&amp;#10;    else:&amp;#10;        time.sleep(0.0001) # give 1ms to other processes&amp;#10;globalClock.reset()&amp;#10;startTime = globalClock.getTime() " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="setup_vbles_trigger" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="postmask">
      <RoutineSettingsComponent name="postmask" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="postmask" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <GratingComponent name="postmask_1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="nearest" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="postmask_1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="$np.random.uniform(0,1,2).round(1)" valType="code" updates="set every repeat" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="None" valType="code" updates="constant" name="sf"/>
        <Param val="$(image_size, image_size)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$postmask_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$np.random.rand(n_square,n_square) * 2 -1" valType="str" updates="set every frame" name="tex"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </GratingComponent>
    </Routine>
    <Routine name="post_trial_jitter">
      <RoutineSettingsComponent name="post_trial_jitter" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="post_trial_jitter" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="post_fixation" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="post_fixation" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$jitter2_delay_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="pick_post_fixation_duration" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;jitter2_dur_options = np.concatenate([[1.0]*16,&amp;#10;[1.5]*8,&amp;#10;[2.0]*4,&amp;#10;[2.5]*2,&amp;#10;[3.0]*2]) &amp;#10;&amp;#10;np.random.shuffle(jitter2_dur_options)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="jitter2_dur_options = np.concatenate([([1.0] * 16), ([1.5] * 8), ([2.0] * 4), ([2.5] * 2), ([3.0] * 2)]);&amp;#10;np.random.shuffle(jitter2_dur_options);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;jitter2_delay_dur=jitter2_dur_options[jit_count]#first is jit1_count 0&amp;#10;&amp;#10;trials.addData(&quot;jitter2&quot;, jitter2_delay_dur)&amp;#10;&amp;#10;jit_count+=1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="pick_post_fixation_duration" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setupTRIGetc"/>
    <Routine name="introduction"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_18_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House5_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House38_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House42_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_24_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_92_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_21_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_10_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_40_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_23_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House48_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_45_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House96_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House61_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_57_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House80_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House99_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House85_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_28_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House76_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_39_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\3257831_House58_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House11_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House43_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House41_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House47_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House90_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House59_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House57_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House26_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_55_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House30_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House51_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House92_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House77_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House33_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_32_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House35_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House73_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\3257813_House74_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_53_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House56_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House95_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_63_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House100_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_8_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_78_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_63_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_4_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House97_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House84_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House82_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House24_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_8_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House98_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_85_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_44_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House31_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_74_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_96_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_52_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_17_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_43_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_66_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House39_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_92_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_14_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_90_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House29_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House72_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_83_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_32_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_65_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House21_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_77_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_17_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House6_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_56_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House66_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House86_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_36_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_91_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House50_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_25_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House83_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House20_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House14_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_53_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House37_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House88_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_27_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House16_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_29_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\3257879_House74_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House75_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House65_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House15_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_42_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_88_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_51_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_54_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_73_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House17_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House49_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_94_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_3_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_47_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_75_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House3_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House25_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House55_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_71_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House53_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_95_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_42_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_20_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House70_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_16_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_61_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_98_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_5_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House79_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_54_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_34_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_26_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_87_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_88_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_100_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House27_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_35_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House62_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House7_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House78_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_27_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_89_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_70_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_80_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_33_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House4_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_50_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_61_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_58_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House52_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_82_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_73_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_66_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House64_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_31_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_72_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House8_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House54_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House13_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_1_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_56_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House63_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_1_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House94_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House68_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House12_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House81_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House1_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House89_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_5_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House23_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House45_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House36_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House28_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House34_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_37_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_68_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_81_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House87_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_95_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_60_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House93_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_51_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_86_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_24_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House69_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_69_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House40_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_62_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_29_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House19_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House91_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_89_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House10_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House44_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\male_28_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House18_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House22_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_12_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House9_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_65_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\3257825_House58_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House2_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House71_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House67_18.png'), ('count', 18)]), OrderedDict([('category', 'Nonliving_Things'), ('image_name', 'processed\\house\\House32_18.png'), ('count', 18)]), OrderedDict([('category', 'Living_Things'), ('image_name', 'processed\\face\\female_58_18.png'), ('count', 18)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="dataframes/face-house-18.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="12345" valType="code"/>
    </LoopInitiator>
    <Routine name="probe_routine"/>
    <Routine name="postmask"/>
    <Routine name="jitter_delay"/>
    <Routine name="response_routine"/>
    <Routine name="visibility"/>
    <Routine name="post_trial_jitter"/>
    <Routine name="show_message"/>
    <LoopTerminator name="trials"/>
    <Routine name="End_experiment"/>
  </Flow>
</PsychoPy2experiment>
